dbdata:
  image: postgres:9.4
  volumes:
    - /var/lib/postgresql/data
  command: true

db:
  image: postgres:9.4
  volumes_from:
    - dbdata
  ports:
    - "5432"
  environment:
    - POSTGRES_USER=pyment
    - POSTGRES_PASSWORD=pyment_password
    - POSTGRES_DATABASE=pyment

public:
  image: phusion/baseimage:0.9.16
  volumes:
    - /opt/public
  command: true

web:
  build: .
  command: python manage.py runserver 0.0.0.0:8000
  volumes:
    - .:/opt/app/
  volumes_from:
    - public
  ports:
    - "8000:8000"
  links:
    - db
  environment:
    - DJANGO_SETTINGS_MODULE=pyment.settings
    - DATABASE_URL=postgres://pyment:pyment_password@db:5432/pyment


# postgres://$DB_ENV_POSTGRES_USER:$DB_ENV_POSTGRES_PASSWORD@$DB_PORT_5432_TCP_ADDR:$DB_PORT_5432_TCP_PORT/$DB_ENV_POSTGRES_DATABASE


# To destroy existing containers:
# 'fig stop' if they are currently running
# 'fig rm --force' if they currently exist
# To build containers:
# 'fig build'
# To get database warmed up:
# 'fig run web true'
# To create tables:
# 'fig run web python manage.py syncdb --noinput'
# To create and populate tables, do this instead:
# 'fig start db && sleep 5 && docker exec -i pyment_db_1 psql -U pyment < pyment_db.bak && fig stop db'
# To add media:
# 'fig run web tar -C /opt/public -xvf /opt/app/media.tar'

# So!

# Task number two: develop minimal data set for testing
